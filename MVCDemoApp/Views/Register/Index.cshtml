@using MVCDemoApp.Models;
@model MVCDemoApp.Models.Register

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<input type="button" class="btn btn-lg btn-primary launch-modal" value="Register">
<br />
@using (Html.BeginForm("Register", "Account", FormMethod.Post))
{

    <div id="myModal" class="modal fade">

        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title">User Registration</h4>
                </div>

                <div class="modal-body">
                    <div class="container">
                        <ul class="nav nav-tabs">
                            <li><a href="#PersonalDetails">Personal Details</a></li>
                            <li><a href="#Password">Password</a></li>

                        </ul>

                        @Html.ValidationSummary(true)
                        <div class="tab-content">
                            <div id="PersonalDetails" class="tab-pane fade">
                                <br />
                                <br />


                                <div class="form-group">
                                    @Html.LabelFor(model => model.FullName, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.FullName)
                                        @Html.ValidationMessageFor(model => model.FullName)
                                    </div>
                                </div>
                                <br />
                                <div class="form-group">
                                    @Html.LabelFor(model => model.username, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.username)
                                        @Html.ValidationMessageFor(model => model.username)
                                    </div>
                                </div>
                                <br />
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmailID, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.EmailID)
                                        @Html.ValidationMessageFor(model => model.EmailID)
                                    </div>
                                </div>

                            </div>


                            <div id="Password" class="tab-pane fade">
                                <br />
                                <br />
                                <div class="form-group">
                                    @Html.LabelFor(model => model.password, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.password)
                                        @Html.ValidationMessageFor(model => model.password)
                                    </div>
                                </div>
                                <br />
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Confirmpassword, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Confirmpassword)
                                        @Html.ValidationMessageFor(model => model.Confirmpassword)
                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>

                </div>

                <div class="modal-footer">

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            <input type="submit" id="btnCreate" value="Create" class="btn btn-default" />
                            @*<button type="submit" class="btn btn-primary">Registration</button>*@
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}



<script type="text/javascript">
    $(document).ready(function () {
        $(".launch-modal").click(function () {
            $("#myModal").modal({
                backdrop: 'static'
            });
        });

        $(".nav-tabs a").click(function () {
            $(this).tab('show');
        });

        $('.nav-tabs a').on('shown.bs.tab', function (event) {
            var x = $(event.target).text();         // active tab
            var y = $(event.relatedTarget).text();  // previous tab
        });

        $("#btnCreate").click(function () {
            debugger;
            if ($("#FullName").val() == "" || $("#username").val() == "" || $("#EmailID").val() == "") {
                $("form ul li a[href='#PersonalDetails']").addClass("active");
                $("form ul li a[href='#PersonalDetails']").tab('show');
                $("form ul li a[href='#Password']").parent().removeClass("active");
                return false;
            }
            if ($("#password").val() == "" || $("#Confirmpassword").val() == "") {
                //$("#password").
                //$("#Confirmpassword")
                $("form ul li a[href='#Password']").addClass("active");
                $("form ul li a[href='#PersonalDetails']").parent().removeClass("active");
                $("form ul li a[href='#Password']").tab("show");
                return false;


            }

        });
    });



</script>

@*<script>
        $(document).ready(function () {
            $('form')
                .formValidation({
                    framework: 'bootstrap',
                    // Only disabled elements are excluded
                    // The invisible elements belonging to inactive tabs must be validated
                    excluded: [':disabled'],
                    icon: {
                        valid: 'glyphicon glyphicon-ok',
                        invalid: 'glyphicon glyphicon-remove',
                        validating: 'glyphicon glyphicon-refresh'
                    },
                    fields: {
                        fullName: {
                            validators: {
                                notEmpty: {
                                    message: 'The full name is required'
                                }
                            }
                        },
                        username: {
                            validators: {
                                notEmpty: {
                                    message: 'The username name is required'
                                }
                            }
                        },
                        address: {
                            validators: {
                                notEmpty: {
                                    message: 'The address is required'
                                }
                            }
                        },
                        EmailID: {
                            validators: {
                                notEmpty: {
                                    message: 'The EmailID is required'
                                }
                            }
                        },
                        password: {
                            validators: {
                                notEmpty: {
                                    message: 'The password is required'
                                }
                            }
                        },
                        Confirmpassword: {
                            validators: {
                                notEmpty: {
                                    message: 'The Confirmpassword is required'
                                }
                            }
                        }
                    }
                })
                .on('err.field.fv', function (e, data) {
                    // data.fv --> The FormValidation instance

                    // Get the first invalid field
                    var $invalidFields = data.fv.getInvalidFields().eq(0);

                    // Get the tab that contains the first invalid field
                    var $tabPane = $invalidFields.parents('.tab-pane'),
                        invalidTabId = $tabPane.attr('id');

                    // If the tab is not active
                    if (!$tabPane.hasClass('active')) {
                        // Then activate it
                        $tabPane.parents('.tab-content')
                                .find('.tab-pane')
                                .each(function (index, tab) {
                                    var tabId = $(tab).attr('id'),
                                        $li = $('a[href="#' + tabId + '"][data-toggle="tab"]').parent();

                                    if (tabId === invalidTabId) {
                                        // activate the tab pane
                                        $(tab).addClass('active');
                                        // and the associated <li> element
                                        $li.addClass('active');
                                    } else {
                                        $(tab).removeClass('active');
                                        $li.removeClass('active');
                                    }
                                });

                        // Focus on the field
                        $invalidFields.focus();
                    }
                });
        });
    </script>*@
